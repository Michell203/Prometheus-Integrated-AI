NOTE:
   RULE: EXAMPLE AAA BBB => CCC :END
   RULE: EXAMPLE AAA(ZZ,<x>) BBB => CCC(<x>) :END
   RULE: EXAMPLE AAA $GREATER(50,<x>) => CCC(<x>) :END
   RULE: EXAMPLE AAA LLL => MMM $ASSERT(NNN) :END

   INPUT: VIS(<x>), PROX(<x>), BACKUP, ADJACENT(<x>), LOWBATTERY(), DIRECTION_OF(<x>), BATTERYFULL
   OUTPUT: #MOVEFORWARD, #TURN(<x>), #CHARGE_2_UNITS, #CHARGEFULL, #MOVE(<x>), #RETRACTPANELS
   STATES: LOOKING, RUNNING, FETCHING, CHARGING, LOWBATTERY, FULLYCHARGED
:ENDNOTE

RULE: LOOKING -VIS(X,<dirX>) -PROX(BG,<dirB>) -LOWBATTERY -TOUCHEDFRONT(BORDER) => #MOVEFORWARD :END
RULE: LOOKING -VIS(X) -PROX(BG) -LOWBATTERY TOUCHEDFRONT(BORDER) => #TURN_R :END

RULE: LOWBATTERY -PROX(BG,<dirB>) LOWBATTERY => #CHARGEFULL :END
RULE: LOWBATTERY PROX(BG,<dirB>) LOWBATTERY => #CHARGE_2_UNITS :END

RULE: FETCHING VIS(X,<dirX>) -PROX(BG,<dirB>) -LOWBATTERY => #MOVE(X,<dirX>) :END
RULE: FETCHING VIS(X,<dirX>) PROX(BG,<dirB>) -LOWBATTERY $GREATER(distX,distB) => #MOVE(X,<dirX>) :END

RULE: RUNNING PROX(BG,<dirB>) => #MOVE(B,<dirB>) :END
RULE: RUNNING VIS(X,<dirX>) PROX(BG,<dirB>) $EQUAL(<dirX>,<dirB>) => #TURN_R :END
RULE: RUNNING VIS(X,<dirX>) PROX(BG,<dirB>) => #MOVE(X,<dirX>) :END
RULE: RUNNING ADJACENT(BG,<dirB>) -ADJACENT(BORDER) => #BACKUP :END
RULE: RUNNING -PROX(BG) -VIS(X) ADJACENT(BORDER) => #BACKUP :END

RULE: FULLYCHARGED BATTERYFULL => #RETRACTPANELS :END